// I saw this art peiece as a checkered board and wanted to imitate it as best as I can
// I tried to make each square match the same color but it ended up being more difficult 
// At least I know that if I am coloring alot of square I can save the colors to this program and I can make it easier to fill the shapes
// Checkerboard, Dark Colors, 1919 by Piet Mondrian
// https://www.piet-mondrian.org/composition-checkerboard-dark-colors.jsp
void setup(){
  size(900,900);
}

void draw(){
  noStroke();
  fill(#ba2a78);
  square(0, 0, 100);
  fill(#cc7401);
  square(97, 0, 100);
  fill(#f08217);
  square(196, 0, 100);
  fill(#df871f);
  square(295, 0, 100);
  fill(#1228ad);
  square(395, 0, 100);
  fill(#d38132);
  square(595, 0, 100);
  fill(#db692b);
  square(695, 0, 100);
  fill(#f78825);
  square(793, 0, 100);
  fill(#d88417);
  square(891, 0, 100);
  fill(#ea9309);
  square(495, 0, 100);
  fill(#de871f);
  square(-1, 100, 100);
  fill(#E59500);
  square(97, 100, 100);
  fill(#e4902d);
  square(196, 99, 100);
  fill(#df8716);
  square(295, 99, 100);
  fill(#E59500);
  square(395, 99, 100);
  fill(#e18e22);
  square(495, 99, 100);
  fill(#df7e00);
  square(595, 99, 100);
  fill(#db692b);
  square(695, 100, 100);
  fill(#f89303);
  square(793, 100, 100);
  fill(#e98f25);
  square(891, 100, 100);
  fill(#f38420);
  square(495, 199, 100);
  fill(#e79911);
  square(0, 199, 100);
  fill(#E59500);
  square(97, 198, 100);
  fill(#dc8b18);
  square(196, 197, 100);
  fill(#e0830b);
  square(295, 196, 100);
  fill(#E59500);
  square(395, 198, 100);
  fill(#f08a2f);
  square(495, 297, 100);
  fill(#e2840b);
  square(595, 198, 100);
  fill(#db692b);
  square(695, 198, 100);
  fill(#F27D00);
  square(793, 198, 100);
  fill(#f3901b);
  square(891, 198, 100);
  fill(#F27D00);
  square(495, 395, 100);
  fill(#e89012);
  square(0, 299, 100);
  fill(#E59500);
  square(97, 297, 100);
  fill(#db8428);
  square(196, 296, 100);
  fill(#db7e10);
  square(295, 296, 100);
  fill(#E59500);
  square(395, 296, 100);
  fill(#e7882b);
  square(495, 495, 100);
  fill(#efa61a);
  square(595, 296, 100);
  fill(#db692b);
  square(695, 296, 100);
  fill(#e08315);
  square(793, 297, 100);
  fill(#e78f1d);
  square(891, 296, 100);
  fill(#ea9213);
  square(495, 593, 100);
  fill(#e5831a);
  square(0, 396, 100);
  fill(#e59508);
  square(97, 395, 100);
  fill(#e9982f);
  square(196, 394, 100);
  fill(#e4771e);
  square(295, 394, 100);
  fill(#E59500);
  square(395, 395, 100);
  fill(#ec8623);
  square(495, 692, 100);
  fill(#ef801e);
  square(595, 396, 100);
  fill(#db692b);
  square(695, 395, 100);
  fill(#eb841e);
  square(793, 394, 100);
  fill(#e68d1a);
  square(891, 393, 100);
  fill(#f09f2b);
  square(495, 791, 100);
  fill(#eb8a2c);
  square(0, 594, 100);
  fill(#E59500);
  square(97, 595, 100);
  fill(#de8a1e);
  square(196, 693, 100);
  fill(#e37c21);
  square(295, 694, 100);
  fill(#E59500);
  square(395, 692, 100);
  fill(#e49024);
  square(594, 890, 100);
  fill(#ea8c12);
  square(594, 794, 100);
  fill(#db692b);
  square(695, 495, 100);
  fill(#e98f25);
  square(793, 494, 100);
  fill(#e58d1b);
  square(891, 593, 100);
  fill(#e38724);
  square(0, 694, 100);
  fill(#E59500);
  square(97, 693, 100);
  fill(#e8901e);
  square(196, 594, 100);
  fill(#ee8913);
  square(295, 594, 100);
  fill(#E59500);
  square(395, 592, 100);
  fill(#e47b1e);
  square(595, 695, 100);
  fill(#e29317);
  square(595, 596, 100);
  fill(#db692b);
  square(695, 693, 100);
  fill(#ffffff);
  square(793, 592, 100);
  fill(#214AC1);
  square(891, 493, 100);
  fill(#ffffff);
  square(0, 496, 100);
  fill(#E59500);
  square(97, 495, 100);
  fill(#214AC1);
  square(196, 494, 100);
  fill(#ffffff);
  square(295, 494, 100);
  fill(#E59500);
  square(395, 492, 100);
  fill(#d99031);
  square(395, 891, 100);
  fill(#ffffff);
  square(0, 792, 100);
  fill(#db692b);
  square(694, 793, 100);
  fill(#db692b);
  square(793, 792, 100);
  fill(#214AC1);
  square(891, 792, 100);
  fill(#E59500);
  square(97, 792, 100);
  fill(#214AC1);
  square(196, 792, 100);
  fill(#db692b);
  square(295, 793, 100);
  fill(#E59500);
  square(395, 792, 100);
  fill(#db7919);
  square(495, 890, 100);
  fill(#db692b);
  square(595, 496, 100);
  fill(#d55e23);
  square(695, 593, 100);
  fill(#db692b);
  square(793, 692, 100);
  fill(#214AC1);
  square(891, 889, 100);
  fill(#df8611);
  square(295, 892, 100);
  fill(#db692b);
  square(196, 892, 100);
  fill(#db692b);
  square(694, 893, 100);
  fill(#db692b);
  square(793, 891, 100);
  fill(#214AC1);
  square(891, 692, 100);
  fill(#d7871e);
  square(0, 891, 100);
  fill(#db692b);
  square(96, 892, 100);
  // Save an image of it
  if (frameCount == 1) {
  save("recipe2.png");
  }
}
